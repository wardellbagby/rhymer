{"version":3,"sources":["webpack://lyricistant/./packages/renderer/main/globals.ts","webpack://lyricistant/./packages/renderer/main/download/index.ts","webpack://lyricistant/./packages/renderer/main/download/ChooseDownloadDialog.tsx","webpack://lyricistant/./packages/renderer/main/platform/useChannel.ts","webpack://lyricistant/./packages/renderer/main/dialog/PlatformDialogs.tsx","webpack://lyricistant/./packages/renderer/main/preferences/PreferencesStore.tsx","webpack://lyricistant/./packages/renderer/main/preferences/Preferences.tsx","webpack://lyricistant/./packages/renderer/main/about/app_icon.png","webpack://lyricistant/./packages/renderer/main/about/AboutDialog.tsx","webpack://lyricistant/./packages/renderer/main/editor/SelectedWordStore.tsx","webpack://lyricistant/./packages/renderer/main/editor/EditorTextStore.tsx","webpack://lyricistant/./packages/codemirror/main/editorTheme.ts","webpack://lyricistant/./packages/codemirror/main/syllableCounts.ts","webpack://lyricistant/./packages/codemirror/main/CodeMirror.tsx","webpack://lyricistant/./packages/codemirror/main/wordSelection.ts","webpack://lyricistant/./packages/renderer/main/util/useEventListener.ts","webpack://lyricistant/./packages/renderer/main/editor/Editor.tsx","webpack://lyricistant/./packages/renderer/main/editor/to-droppable-file.ts","webpack://lyricistant/./packages/renderer/main/app/useSmallLayout.ts","webpack://lyricistant/./packages/renderer/main/menu/Menu.tsx","webpack://lyricistant/./packages/renderer/main/rhymes/rhyme.ts","webpack://lyricistant/./packages/renderer/main/rhymes/datamuse.ts","webpack://lyricistant/./packages/rhyme-generator/main/index.ts","webpack://lyricistant/./packages/renderer/main/rhymes/RhymesMachine.ts","webpack://lyricistant/./packages/renderer/main/rhymes/Rhymes.tsx","webpack://lyricistant/./packages/common/main/BuildModes.ts","webpack://lyricistant/./packages/renderer/main/app/AppLayout.tsx","webpack://lyricistant/./packages/renderer/main/app/App.tsx","webpack://lyricistant/./packages/renderer/main/app/DesktopOnly.tsx","webpack://lyricistant/./packages/renderer/main/app/AppError.tsx","webpack://lyricistant/./packages/renderer/main/index.tsx","webpack://lyricistant/./packages/renderer/main/analytics/setupAnalytics.ts","webpack://lyricistant/./packages/renderer/main/app/PlatformEventsReadyHandler.tsx","webpack://lyricistant/./packages/renderer/main/theme/Themed.tsx","webpack://lyricistant/./packages/renderer/main/app/AppRouter.tsx","webpack://lyricistant/./packages/renderer/main/preload.tsx","webpack://lyricistant/./packages/renderer/main/theme/index.ts"],"names":["APP_VERSION","APP_HOMEPAGE","APP_AUTHOR","logger","window","platformDelegate","latestReleaseUrl","supportedReleases","platform","asset","arch","releaseColor","releaseTextColor","DownloadButton","props","release","onClick","classes","makeStyles","root","background","color","useStyles","Box","padding","Button","className","variant","fullWidth","startIcon","ReleaseIcon","size","ChooseDownloadDialog","history","onClose","replace","releases","useMemo","reduce","map","list","get","set","Map","Dialog","open","DialogTitle","id","paddingLeft","paddingRight","paddingBottom","Grid","container","spacing","alignItems","justify","keys","item","key","xs","Typography","align","index","archs","length","url","Linux","Apple","Ubuntu","MicrosoftWindows","useChannel","channel","listener","deps","useEffect","PlatformDialog","dialogData","setDialogData","useState","onButtonClick","useCallback","label","tag","title","DialogContent","message","DialogContentText","progress","LinearProgressWithLabel","value","buttons","DialogActions","display","paddingTop","width","mr","LinearProgress","minWidth","Math","round","preferences","BehaviorSubject","preferencesStore","subscriber","pipe","distinctUntilChanged","subscribe","onPreferences","prefs","next","PreferencesStoreContext","createContext","PreferencesStore","children","Provider","usePreferences","store","useContext","setPrefs","subscription","unsubscribe","DialogTransition","ref","Slide","direction","dialogStyles","theme","createStyles","marginLeft","flex","palette","primary","contrastText","height","divider","marginTop","dialogPaper","default","paper","appBar","header","fontWeight","select","marginRight","Header","undefined","Divider","SelectBox","onChange","items","FormControl","InputLabel","Select","e","target","itemLabel","itemValue","MenuItem","Preferences","originalPreferenceData","preferencesData","setPreferencesData","fullScreen","TransitionComponent","PaperProps","AppBar","position","Toolbar","IconButton","edge","Close","Save","Container","maxWidth","Paper","elevation","square","flexDirection","flexGrow","textSize","rhymeSource","Info","aboutInfo","Author","Version","Homepage","Link","rel","href","useTableCellStyles","borderBottom","DividerlessTableCell","TableCell","AboutDialog","src","alt","TableContainer","Table","TableBody","Object","TableRow","selectedWords","replacedWords","Subject","selectedWordStore","filter","word","selectedWordPosition","from","to","onWordSelected","onWordReplaced","SelectedWordStoreContext","SelectedWordStore","useSelectedWordStore","useReplacedWords","setWord","editorText","editorTextStore","onEditorText","text","EditorTextStoreContext","EditorTextStore","useEditorTextStore","useEditorText","setText","editorTheme","appTheme","backgroundColor","caretColor","outline_fallback","outline","main","getContrastText","fontFamily","fontSize","typography","justifyContent","secondary","borderRight","grey","A100","border","borderRadius","margin","textAlign","textDecoration","action","active","right","dark","type","EditorContainer","styled","CodeMirrorEditor","useRef","view","setView","useTheme","themeCompartment","defaultConfig","extensions","formatNumber","lineNo","state","doc","lines","line","toString","of","config","update","selectionSet","document","lineAt","head","isDelimiter","c","exec","start","end","empty","assoc","max","substring","findWordAt","selection","asSingle","docChanged","startState","onTextChanged","onDefaultConfigReady","current","newView","parent","setState","destroy","onEditorMounted","dispatch","effects","reconfigure","wordReplacement","originalWord","newWord","insert","changes","min","mapPos","useDocumentListener","event","nestedListener","documentEvent","addEventListener","removeEventListener","Editor","editor","setEditor","setDefaultConfig","preventDefault","stopPropagation","dataTransfer","files","file","path","name","data","arrayBuffer","toDroppableFile","enqueueSnackbar","onFileSaveEnded","error","onNewFileAttempt","onQuitAttempt","onNewFileCreated","onFileOpened","fileName","fileContents","clearHistory","onTextRequested","onUndo","onRedo","onFind","onReplace","handleEditorEvents","useSmallLayout","useMediaQuery","breakpoints","down","useIconStyles","flexShrink","icon","useMenuStyles","menu","isSmallLayout","MenuIcon","ariaLabel","debouncedClick","useDebouncedCallback","ButtonBase","child","Menu","useHorizontal","uiConfig","setUiConfig","onSaveClicked","onConfigChange","marginBottom","boxShadow","AddCircle","showOpen","FolderOpen","showDownload","navigator","find","downloadApp","GetApp","Settings","Rhyme","score","this","asyncRhymes","param","response","fetch","ok","status","JSON","parse","increaseScore","rhymes","amount","rhyme","rhymeGenerator","Worker","URL","rhymesMachine","initial","context","on","INPUT","cond","input","actions","states","inactive","loading","debouncing","after","400","invoke","results","generateRhymes","Promise","all","then","Set","array","prev","concat","sort","left","onDone","Array","isArray","onError","displaying","useRhymeListStyles","disabled","itemContainer","up","listContainer","flexWrap","RhymesList","onRhymeClicked","Item","List","components","style","overscan","totalCount","listClassName","itemContent","ListItem","button","ListItemText","primaryTypographyProps","renderRhyme","useLoadingIndicatorStyles","visibility","progressBarColor","progressBarBackground","LoadingIndicator","colorPrimary","barColorPrimary","useInactiveHelperTextStyles","HelperText","overflow","textOverflow","p","Rhymes","send","useMachine","handleError","useErrorHandler","selectedWord","useSelectedWords","useSelectedWordPosition","useLayoutEffect","matches","AppLayout","detail","displayableChildren","m","gridTemplateRows","createGridTemplateRows","gridTemplateColumns","createGridTemplateColumns","App","filename","isUnsupportedBrowser","WarningDialog","onContinue","back","AppError","location","reload","onCopy","clipboard","writeText","paragraph","onerror","col","console","stringify","goatcounter","protocol","host","allow_local","analyticsScript","createElement","setAttribute","setupAnalytics","getElementById","onThemeChanged","setTheme","useDarkMode","CssBaseline","ThemeProvider","foreground","body","maxSnack","anchorOrigin","vertical","horizontal","hashType","ErrorBoundary","fallbackRender","isAcknowledged","setAcknowledged","showWarning","pathname","component","render","opacity","dotStyles","dot","animation","animationFillMode","dotOffset","transform","rootStyles","overlay","primaryText","transition","top","bottom","overscrollBehavior","zIndex","attach","append","forEach","_","dotElement","onPageLoaded","setTimeout","remove","onThemeUpdated","getThemePalette","useDarkTheme","darkThemePalette","lightThemePalette","createTheme","themePalette","hover","hoverOpacity","surface","secondaryText"],"mappings":"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","file":"594.renderer.js","sourcesContent":["import { PlatformDelegate } from '@lyricistant/common/Delegates';\nimport { RendererLogger } from '@lyricistant/common/Logger';\n\nconst [APP_VERSION, APP_HOMEPAGE, APP_AUTHOR] = [\n  process.env.APP_VERSION,\n  process.env.APP_HOMEPAGE,\n  process.env.APP_AUTHOR,\n];\n\nconst logger: RendererLogger = window.logger;\nconst platformDelegate: PlatformDelegate = window.platformDelegate;\n\nexport { APP_AUTHOR, APP_HOMEPAGE, APP_VERSION, logger, platformDelegate };\n","import { logger } from \"@lyricistant/renderer/globals\";\n\nexport const latestReleaseUrl =\n  'https://github.com/wardellbagby/lyricistant/releases/latest/download/';\n\nexport interface Release {\n  platform: 'Mac' | 'Windows' | 'Ubuntu' | 'Linux';\n  asset: string;\n  arch?: string;\n}\n\nexport const supportedReleases: Release[] = [\n  { platform: 'Mac', asset: 'lyricistant-mac_x64.dmg' },\n  {\n    platform: 'Windows',\n    asset: 'lyricistant-win.exe',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_x86_64.AppImage',\n    arch: 'x64',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_i386.AppImage',\n    arch: 'i386',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_armv7l.AppImage',\n    arch: 'armv7l',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_arm64.AppImage',\n    arch: 'arm64',\n  },\n];\n\nexport const downloadApp = (): boolean => {\n  let url = latestReleaseUrl;\n  switch (window.navigator.platform) {\n    case 'MacIntel': {\n      logger.info('Downloading app for Mac.');\n      url += supportedReleases.find((release) => release.platform === 'Mac')\n        .asset;\n      break;\n    }\n    case 'Win32': {\n      logger.info('Downloading app for Windows.');\n      url += supportedReleases.find((release) => release.platform === 'Windows')\n        .asset;\n      break;\n    }\n    default: {\n      logger.info(\n        `Couldn't automatically download for platform ${window.navigator.platform}`\n      );\n      return false;\n    }\n  }\n  window.open(url, '_blank');\n  return true;\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Apple, Linux, MicrosoftWindows, Ubuntu } from 'mdi-material-ui';\nimport React, { useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  latestReleaseUrl,\n  Release,\n  supportedReleases,\n} from '@lyricistant/renderer/download';\nimport { logger } from \"@lyricistant/renderer/globals\";\n\nconst useStyles = (release: Release) =>\n  makeStyles(() => ({\n    root: {\n      background: releaseColor(release),\n      color: releaseTextColor(release),\n    },\n  }))();\n\nconst releaseColor = ({ platform }: Release) => {\n  switch (platform) {\n    case 'Linux':\n      return '#98ff98';\n    case 'Mac':\n      return '#A3AAAE';\n    case 'Ubuntu':\n      return '#E95420';\n    case 'Windows':\n      return '#00A4EF';\n  }\n};\n\nconst releaseTextColor = ({ platform }: Release) => {\n  switch (platform) {\n    case 'Linux':\n      return '#000000';\n    case 'Mac':\n      return '#000000';\n    case 'Ubuntu':\n      return '#FFFFFF';\n    case 'Windows':\n      return '#000000';\n  }\n};\n\nconst DownloadButton = (props: { release: Release; onClick: () => void }) => {\n  const { release, onClick } = props;\n  const classes = useStyles(release);\n\n  return (\n    <Box padding={'8px'}>\n      <Button\n        className={classes.root}\n        variant={'contained'}\n        fullWidth\n        startIcon={<ReleaseIcon release={release} />}\n        size={'large'}\n        onClick={onClick}\n      >\n        {release.arch ?? 'Download'}\n      </Button>\n    </Box>\n  );\n};\n\nexport const ChooseDownloadDialog = () => {\n  const history = useHistory();\n  const onClose = () => history.replace('/');\n\n  const handleReleaseClicked = (url: string) => {\n    logger.info(`App download link clicked. Chosen URL: ${url}`);\n    window.open(url, '_blank');\n    onClose();\n  };\n\n  const releases = useMemo(\n    () =>\n      supportedReleases.reduce((map, release) => {\n        const list = map.get(release.platform) ?? [];\n        map.set(release.platform, [...list, release]);\n        return map;\n      }, new Map<string, Release[]>()),\n    []\n  );\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"choose-download-dialog-title\"\n      open\n    >\n      <DialogTitle id=\"choose-download-dialog-title\">\n        Download Lyricistant\n      </DialogTitle>\n      <Box paddingLeft={'16px'} paddingRight={'16px'} paddingBottom={'32px'}>\n        <Grid container spacing={4} alignItems={'center'} justify={'center'}>\n          {[...releases.keys()].map((platform) => (\n            <Grid\n              container\n              item\n              alignItems={'center'}\n              justify={'center'}\n              key={platform}\n            >\n              <Grid item xs={12}>\n                <Typography align={'center'} variant={'h6'}>\n                  {platform}\n                </Typography>\n              </Grid>\n              {releases.get(platform).map((release, index, archs) => (\n                <Grid key={release.asset} item xs={archs.length === 1 ? 8 : 6}>\n                  <DownloadButton\n                    release={release}\n                    onClick={() => {\n                      handleReleaseClicked(latestReleaseUrl + release.asset);\n                    }}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n      <Button size={'large'} variant={'contained'} fullWidth onClick={onClose}>\n        Close\n      </Button>\n    </Dialog>\n  );\n};\n\nconst ReleaseIcon = (props: { release: Release }) => {\n  const { platform } = props.release;\n  switch (platform) {\n    case 'Linux':\n      return <Linux />;\n    case 'Mac':\n      return <Apple />;\n    case 'Ubuntu':\n      return <Ubuntu />;\n    case 'Windows':\n      return <MicrosoftWindows />;\n  }\n};\n","import {\n  PlatformToRendererListener,\n  RendererChannel,\n} from '@lyricistant/common/Delegates';\nimport { DependencyList, useEffect } from 'react';\nimport { platformDelegate } from \"@lyricistant/renderer/globals\";\n\n/**\n * Register the provided listener on the given platform channel. The listener\n * will be invoked whenever the platform sends data to the given channel.\n *\n * @param channel Platform channel to listen to changes on.\n * @param listener Listener that will be invoked.\n * @param deps The dependencies that will be used to re-register the listener\n * whenever they change. If not provided, listener will be re-registered\n * whenever the React component is re-mounted. This differs from useEffect when\n * no dependency list is provided, as useEffect would re-register on every\n * render pass.\n */\nexport const useChannel: <Channel extends RendererChannel>(\n  channel: Channel,\n  listener: PlatformToRendererListener[Channel],\n  deps?: DependencyList\n) => void = (channel, listener, deps) => {\n  useEffect(() => {\n    platformDelegate.on(channel, listener);\n    return () => platformDelegate.removeListener(channel, listener);\n  }, deps ?? []);\n};\n","import { DialogData } from '@lyricistant/common/dialogs/Dialog';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  LinearProgress,\n  LinearProgressProps,\n  Typography,\n} from '@material-ui/core';\nimport { useCallback, useState } from 'react';\nimport * as React from 'react';\nimport { platformDelegate } from \"@lyricistant/renderer/globals\";\nimport { useChannel } from \"@lyricistant/renderer/platform/useChannel\";\n\nexport function PlatformDialog() {\n  const [dialogData, setDialogData] = useState<DialogData>(null);\n  const onButtonClick = useCallback(\n    (label) => {\n      setDialogData(null);\n      platformDelegate.send('dialog-button-clicked', dialogData.tag, label);\n    },\n    [dialogData]\n  );\n\n  useChannel('show-dialog', setDialogData, [setDialogData]);\n\n  if (!dialogData) {\n    return <div />;\n  }\n\n  return (\n    <Dialog open>\n      <DialogTitle>{dialogData.title}</DialogTitle>\n      <DialogContent>\n        {dialogData.message && (\n          <DialogContentText>{dialogData.message}</DialogContentText>\n        )}\n        {dialogData.progress && (\n          <LinearProgressWithLabel value={dialogData.progress} />\n        )}\n      </DialogContent>\n\n      {dialogData.buttons && (\n        <DialogActions>\n          {dialogData.buttons.map((label) => (\n            <Button\n              key={label}\n              onClick={() => onButtonClick(label)}\n              color=\"primary\"\n            >\n              {label}\n            </Button>\n          ))}\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n}\n\nconst LinearProgressWithLabel = (\n  props: LinearProgressProps & { value: number }\n) => (\n  <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    paddingTop={'16px'}\n    paddingBottom={'16px'}\n    paddingLeft={'8px'}\n    paddingRight={'8px'}\n  >\n    <Box width=\"100%\" mr={1}>\n      <LinearProgress variant=\"determinate\" {...props} />\n    </Box>\n    <Box minWidth={35}>\n      <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n        props.value\n      )}%`}</Typography>\n    </Box>\n  </Box>\n);\n","import { BehaviorSubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { PreferencesData } from '@lyricistant/common/preferences/PreferencesData';\nimport { useChannel } from \"@lyricistant/renderer/platform/useChannel\";\n\nconst preferences = new BehaviorSubject<PreferencesData>(null);\n\nconst preferencesStore = {\n  preferences: (\n    subscriber: (preferences: PreferencesData) => void\n  ): Subscription =>\n    preferences.pipe(distinctUntilChanged()).subscribe(subscriber),\n  onPreferences: (prefs: PreferencesData) => preferences.next(prefs),\n};\n\nconst PreferencesStoreContext = createContext(preferencesStore);\n\nexport const PreferencesStore = ({ children }: { children: ReactNode }) => {\n  useChannel('prefs-updated', preferencesStore.onPreferences);\n\n  return (\n    <PreferencesStoreContext.Provider value={preferencesStore}>\n      {children}\n    </PreferencesStoreContext.Provider>\n  );\n};\n\nexport const usePreferencesStore = () => useContext(PreferencesStoreContext);\nexport const usePreferences = (): PreferencesData | undefined => {\n  const store = usePreferencesStore();\n  const [prefs, setPrefs] = useState<PreferencesData>();\n\n  useEffect(() => {\n    const subscription = store.preferences(setPrefs);\n    return () => subscription.unsubscribe();\n  }, [store, setPrefs]);\n\n  return prefs;\n};\n","import {\n  RhymeSource,\n  Theme as LyricistantTheme,\n} from '@lyricistant/common/preferences/PreferencesData';\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Slide,\n} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport { SlideProps } from '@material-ui/core/Slide';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Info } from '@material-ui/icons';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { platformDelegate } from \"@lyricistant/renderer/globals\";\nimport { usePreferences } from './PreferencesStore';\n\nconst DialogTransition = React.forwardRef<unknown, SlideProps>(\n  function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  }\n);\nconst dialogStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    root: {\n      color: theme.palette.primary.contrastText,\n    },\n    container: {\n      height: '100%',\n    },\n    divider: {\n      marginTop: '2px',\n    },\n    dialogPaper: {\n      background: theme.palette.background.default,\n    },\n    paper: {\n      height: '100%',\n      paddingTop: '32px',\n      paddingBottom: '32px',\n      paddingLeft: '32px',\n      paddingRight: '32px',\n    },\n    appBar: {\n      paddingTop: 'env(safe-area-inset-top)',\n      paddingLeft: 'env(safe-area-inset-left)',\n      paddingRight: 'env(safe-area-inset-right)',\n    },\n    header: {\n      fontWeight: 'bolder',\n    },\n    select: {\n      marginLeft: '16px',\n      marginRight: '16px',\n    },\n  })\n);\n\nconst Header = ({ label }: { label: string }) => {\n  const classes = dialogStyles(undefined);\n  return (\n    <>\n      <Typography className={classes.header} variant={'h6'}>\n        {label}\n      </Typography>\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\ninterface LabeledValue<T> {\n  label: string;\n  value: T;\n}\ninterface SelectBoxProps<T> {\n  value: T;\n  onChange: (value: T) => void;\n  items: Array<LabeledValue<T>>;\n  label: string;\n}\nconst SelectBox = <T extends string | number>({\n  value,\n  onChange,\n  items,\n  label,\n}: SelectBoxProps<T>) => {\n  const classes = dialogStyles(undefined);\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel className={classes.select}>{label}</InputLabel>\n      <Select\n        className={classes.select}\n        value={value}\n        onChange={(e) => onChange(e.target.value as T)}\n        label={label}\n      >\n        {items.map(({ label: itemLabel, value: itemValue }) => (\n          <MenuItem value={itemValue}>{itemLabel}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport const Preferences = () => {\n  const history = useHistory();\n  const classes = dialogStyles(undefined);\n  const originalPreferenceData = usePreferences();\n  const [preferencesData, setPreferencesData] = useState(\n    originalPreferenceData\n  );\n\n  useEffect(() => {\n    setPreferencesData(originalPreferenceData);\n  }, [originalPreferenceData]);\n\n  const onDetailsSizeChanged = (textSize: number) => {\n    setPreferencesData({\n      ...preferencesData,\n      textSize,\n    });\n  };\n\n  const onThemeChanged = (theme: LyricistantTheme) => {\n    setPreferencesData({\n      ...preferencesData,\n      theme,\n    });\n  };\n\n  const onRhymeSourceChanged = (rhymeSource: RhymeSource) => {\n    setPreferencesData({\n      ...preferencesData,\n      rhymeSource,\n    });\n  };\n\n  const onPreferencesSaved = () =>\n    platformDelegate.send('save-prefs', preferencesData);\n\n  const closePreferences = () => history.replace('/');\n\n  const onAboutClicked = () => history.replace('/about');\n\n  if (!preferencesData) {\n    return <div />;\n  }\n\n  return (\n    <Dialog\n      fullScreen\n      className={classes.root}\n      open\n      TransitionComponent={DialogTransition}\n      PaperProps={{ className: classes.dialogPaper }}\n    >\n      <AppBar color={'primary'} className={classes.appBar} position=\"sticky\">\n        <Toolbar>\n          <IconButton color={'inherit'} edge=\"start\" onClick={closePreferences}>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Preferences\n          </Typography>\n          <IconButton color={'inherit'} onClick={onPreferencesSaved}>\n            <SaveIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth={'md'} className={classes.container}>\n        <Paper elevation={4} square className={classes.paper}>\n          <Box display={'flex'} flexDirection={'column'} height={'100%'}>\n            <Box flexGrow={1}>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Header label={'Display'} />\n                </Grid>\n                <Grid item xs={12}>\n                  <SelectBox\n                    value={preferencesData.textSize}\n                    onChange={onDetailsSizeChanged}\n                    items={[\n                      { value: 8, label: 'Tiny' },\n                      { value: 12, label: 'Small' },\n                      { value: 16, label: 'Default' },\n                      { value: 24, label: 'Large' },\n                      { value: 28, label: 'Huge' },\n                    ]}\n                    label={'Text Size'}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SelectBox\n                    value={preferencesData.theme}\n                    onChange={onThemeChanged}\n                    items={[\n                      { value: LyricistantTheme.Light, label: 'Light' },\n                      { value: LyricistantTheme.Dark, label: 'Dark' },\n                      {\n                        value: LyricistantTheme.System,\n                        label: 'Follow System',\n                      },\n                    ]}\n                    label={'Theme'}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Header label={'Other'} />\n                </Grid>\n                <Grid item xs={12}>\n                  <SelectBox\n                    value={preferencesData.rhymeSource}\n                    onChange={onRhymeSourceChanged}\n                    items={[\n                      { value: RhymeSource.Offline, label: 'Offline (alpha)' },\n                      { value: RhymeSource.Datamuse, label: 'Datamuse' },\n                    ]}\n                    label={'Rhyme Source'}\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n            <Button\n              fullWidth={false}\n              variant={'text'}\n              startIcon={<Info />}\n              size={'large'}\n              onClick={onAboutClicked}\n            >\n              About Lyricistant\n            </Button>\n          </Box>\n        </Paper>\n      </Container>\n    </Dialog>\n  );\n};\n","export default __webpack_public_path__ + \"22c1ed668abdb7caf6cdc72bbf2283d7.png\";","import {\n  Box,\n  Button,\n  DialogContent,\n  Grid,\n  Link,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableContainer,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  APP_AUTHOR,\n  APP_HOMEPAGE,\n  APP_VERSION,\n  platformDelegate,\n} from \"@lyricistant/renderer/globals\";\nimport appIcon from './app_icon.png';\n\nconst aboutInfo = {\n  Author: APP_AUTHOR,\n  Version: APP_VERSION,\n  Homepage: (\n    <Link target=\"_blank\" rel=\"noopener\" href={APP_HOMEPAGE}>\n      GitHub\n    </Link>\n  ),\n  'Report an issue': (\n    <Link\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={'https://github.com/wardellbagby/lyricistant/issues/new'}\n    >\n      Issues\n    </Link>\n  ),\n};\n\nconst useTableCellStyles = makeStyles({\n  root: {\n    borderBottom: 'none',\n  },\n});\n\nconst DividerlessTableCell = (props: TableCellProps) => {\n  const classes = useTableCellStyles();\n  return <TableCell className={classes.root} {...props} />;\n};\n\nexport const AboutDialog = () => {\n  const history = useHistory();\n  const onClose = () => history.replace('/');\n\n  return (\n    <Dialog onClose={onClose} open className={'paper'}>\n      <DialogContent>\n        <Grid\n          container\n          spacing={1}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12}>\n            <img src={appIcon} height={'48px'} alt={'Lyricistant Icon'} />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant={'h6'}>Lyricistant</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TableContainer>\n              <Table size={'small'}>\n                <TableBody>\n                  {Object.keys(aboutInfo)\n                    .map((key: keyof typeof aboutInfo) => [key, aboutInfo[key]])\n                    .map(([key, value]) => (\n                      <TableRow key={key}>\n                        <DividerlessTableCell>{key}</DividerlessTableCell>\n                        <DividerlessTableCell>{value}</DividerlessTableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Box height={'8px'} />\n          <Grid item xs={12}>\n            <Button\n              variant={'outlined'}\n              onClick={() => platformDelegate.send('save-logs')}\n            >\n              Download Logs\n            </Button>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { WordAtPosition } from '@lyricistant/codemirror/wordSelection';\nimport { WordReplacement } from '@lyricistant/codemirror/CodeMirror';\n\nconst selectedWords = new BehaviorSubject<WordAtPosition>(null);\nconst replacedWords = new Subject<WordReplacement>();\n\nconst selectedWordStore = {\n  selectedWords: (subscriber: (word: string) => void): Subscription =>\n    selectedWords\n      .pipe(\n        filter((value) => value && !!value.word),\n        map((value) => value.word),\n        distinctUntilChanged()\n      )\n      .subscribe(subscriber),\n  selectedWordPosition: (\n    subscriber: (position: [number, number]) => void\n  ): Subscription =>\n    selectedWords\n      .pipe(\n        filter((value) => value && !!value.word),\n        map((value) => [value.from, value.to]),\n        distinctUntilChanged<[number, number]>()\n      )\n      .subscribe(subscriber),\n  replacedWords: (\n    subscriber: (replacement: WordReplacement) => void\n  ): Subscription => replacedWords.subscribe(subscriber),\n  onWordSelected: (word: WordAtPosition) => selectedWords.next(word),\n  onWordReplaced: (word: WordReplacement) => replacedWords.next(word),\n};\n\nconst SelectedWordStoreContext = createContext(selectedWordStore);\n\nexport const SelectedWordStore = ({ children }: { children: ReactNode }) => (\n  <SelectedWordStoreContext.Provider value={selectedWordStore}>\n    {children}\n  </SelectedWordStoreContext.Provider>\n);\nexport const useSelectedWordStore = () => useContext(SelectedWordStoreContext);\nexport const useSelectedWords = (): string => {\n  const store = useSelectedWordStore();\n  const [word, setWord] = useState<string>();\n  useEffect(() => {\n    const subscription = store.selectedWords(setWord);\n    return () => subscription.unsubscribe();\n  }, [store, setWord]);\n  return word;\n};\nexport const useSelectedWordPosition = (): [number, number] => {\n  const store = useSelectedWordStore();\n  const [word, setWord] = useState<[number, number]>();\n  useEffect(() => {\n    const subscription = store.selectedWordPosition(setWord);\n    return () => subscription.unsubscribe();\n  }, [store, setWord]);\n  return word;\n};\nexport const useReplacedWords = (): WordReplacement => {\n  const store = useSelectedWordStore();\n  const [word, setWord] = useState<WordReplacement>();\n  useEffect(() => {\n    const subscription = store.replacedWords(setWord);\n    return () => subscription.unsubscribe();\n  }, [store, setWord]);\n  return word;\n};\n","import { BehaviorSubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nconst editorText = new BehaviorSubject<string>(null);\n\nconst editorTextStore = {\n  editorText: (subscriber: (text: string) => void): Subscription =>\n    editorText.pipe(distinctUntilChanged()).subscribe(subscriber),\n  onEditorText: (text: string) => editorText.next(text),\n};\n\nconst EditorTextStoreContext = createContext(editorTextStore);\n\nexport const EditorTextStore = ({ children }: { children: ReactNode }) => (\n  <EditorTextStoreContext.Provider value={editorTextStore}>\n    {children}\n  </EditorTextStoreContext.Provider>\n);\n\nexport const useEditorTextStore = () => useContext(EditorTextStoreContext);\nexport const useEditorText = (): string => {\n  const store = useEditorTextStore();\n  const [text, setText] = useState<string>();\n  useEffect(() => {\n    const subscription = store.editorText(setText);\n    return () => subscription.unsubscribe();\n  }, [store, setText]);\n  return text;\n};\n","import { Theme } from '@material-ui/core';\nimport { Extension } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\nexport const editorTheme = (appTheme: Theme): Extension =>\n  EditorView.theme(\n    {\n      '&.cm-editor': {\n        height: '100%',\n        width: '100%',\n        backgroundColor: appTheme.palette.background.default,\n        caretColor: appTheme.palette.text.primary,\n      },\n      '&.cm-focused': {\n        outline_fallback: 'none',\n        outline: 'none',\n      },\n      '.cm-line': {\n        color: appTheme.palette.text.primary,\n        '&::selection': {\n          backgroundColor: appTheme.palette.primary.main,\n          color: appTheme.palette.getContrastText(\n            appTheme.palette.primary.main\n          ),\n        },\n      },\n      '.cm-scroller': {\n        fontFamily: '\"Roboto Mono\"',\n        fontSize: appTheme.typography.fontSize,\n      },\n      '.cm-gutters': {\n        width: '60px',\n        justifyContent: 'center',\n        backgroundColor: appTheme.palette.background.default,\n        color: appTheme.palette.text.secondary,\n        borderRight: 'none',\n      },\n      '.cm-panel': {\n        backgroundColor: appTheme.palette.background.paper,\n        color: appTheme.palette.getContrastText(\n          appTheme.palette.background.paper\n        ),\n      },\n      '.cm-searchMatch': {\n        backgroundColor: appTheme.palette.grey.A100,\n        color: appTheme.palette.getContrastText(appTheme.palette.grey.A100),\n      },\n      '.cm-searchMatch.selected': {\n        backgroundColor: appTheme.palette.primary.main,\n        color: appTheme.palette.primary.contrastText,\n      },\n      '.cm-button': {\n        background: appTheme.palette.primary.main,\n        color: appTheme.palette.primary.contrastText,\n        border: 'none',\n        borderRadius: '0px',\n        margin: '2px',\n        padding: '8px',\n        width: '100px',\n        height: '35px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-block',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n        '&:focus': {\n          outline: 'none',\n        },\n        '&:active': {\n          background: appTheme.palette.action.active,\n        },\n      },\n      '.cm-textfield': {\n        color: appTheme.palette.text.primary,\n        padding: '8px',\n        width: '150px',\n        height: '35px',\n        textDecoration: 'none',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n        '&:focus': {\n          outline: 'none',\n        },\n      },\n      '.cm-panel label': {\n        display: 'none',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n      },\n      '.cm-panel.cm-search [name=select]': {\n        display: 'none',\n      },\n      '.cm-panel.cm-search [name=close]': {\n        fontSize: '24px',\n        right: '8px',\n        '&:focus': {\n          outline: 'none',\n        },\n        color: appTheme.palette.text.primary,\n      },\n    },\n    {\n      dark: appTheme.palette.type === 'dark',\n    }\n  );\n","import { Extension } from '@codemirror/state';\nimport { lineNumbers } from '@codemirror/gutter';\nimport syllable from 'syllable';\n\nexport const syllableCounts = (): Extension =>\n  lineNumbers({\n    formatNumber: (lineNo, state) => {\n      if (lineNo > state.doc.lines) {\n        return '0';\n      }\n      return syllable(state.doc.line(lineNo).text).toString();\n    },\n  });\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  Compartment,\n  EditorSelection,\n  EditorState,\n  EditorStateConfig,\n} from '@codemirror/state';\nimport { defaultKeymap } from '@codemirror/commands';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { history, historyKeymap } from '@codemirror/history';\nimport { styled, useTheme } from '@material-ui/core';\nimport '@fontsource/roboto-mono/latin-400.css';\nimport { searchKeymap } from '@codemirror/search';\nimport { editorTheme } from './editorTheme';\nimport { syllableCounts } from './syllableCounts';\nimport { WordAtPosition, wordSelection } from './wordSelection';\n\nconst EditorContainer = styled('div')({\n  height: '100%',\n  width: 'calc(100% - env(safe-area-inset-left) - env(safe-area-inset-right))',\n  paddingLeft: 'env(safe-area-inset-left)',\n  paddingRight: 'env(safe-area-inset-right)',\n});\n\nexport interface WordReplacement {\n  originalWord: WordAtPosition;\n  newWord: string;\n}\n\nexport interface CodeMirrorEditorProps {\n  onEditorMounted: (view: EditorView) => void;\n  onWordSelected?: (word: WordAtPosition) => void;\n  wordReplacement?: WordReplacement;\n  onDefaultConfigReady?: (state: EditorStateConfig) => void;\n  onTextChanged?: (text: string) => void;\n}\n\nexport function CodeMirrorEditor(props: CodeMirrorEditorProps) {\n  const ref = useRef<HTMLDivElement>();\n  const [view, setView] = useState<EditorView>(null);\n  const appTheme = useTheme();\n  const themeCompartment = useMemo(() => new Compartment(), []);\n  const defaultConfig = useMemo<EditorStateConfig>(\n    () => ({\n      extensions: [\n        syllableCounts(),\n        themeCompartment.of(editorTheme(appTheme)),\n        history(),\n        wordSelection({\n          onWordSelected: props.onWordSelected,\n        }),\n        EditorView.updateListener.of((update) => {\n          if (update.docChanged || update.state === update.startState) {\n            props.onTextChanged(update.state.doc.toString());\n          }\n        }),\n        EditorView.lineWrapping,\n        placeholder('Type out some lyrics...'),\n        keymap.of([...defaultKeymap, ...historyKeymap, ...searchKeymap]),\n      ],\n    }),\n    [appTheme, props.onTextChanged]\n  );\n  useEffect(() => {\n    if (defaultConfig) {\n      props.onDefaultConfigReady?.(defaultConfig);\n    }\n  }, [props.onDefaultConfigReady, defaultConfig]);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    if (!view) {\n      const newView = new EditorView({\n        parent: ref.current,\n      });\n      newView.setState(EditorState.create(defaultConfig));\n      setView(newView);\n    }\n\n    return () => {\n      if (!ref.current) {\n        view.destroy();\n        setView(null);\n      }\n    };\n  }, [view, setView]);\n  useEffect(() => {\n    if (view) {\n      props.onEditorMounted(view);\n    }\n  }, [view, props.onEditorMounted]);\n  useEffect(() => {\n    if (!view) {\n      return;\n    }\n    view.dispatch({\n      effects: themeCompartment.reconfigure(editorTheme(appTheme)),\n    });\n  }, [view, appTheme]);\n  useEffect(() => {\n    if (!view || !props.wordReplacement) {\n      return;\n    }\n    const {\n      originalWord: { from, to },\n      newWord: insert,\n    } = props.wordReplacement;\n    const changes = view.state.changes({\n      from: Math.max(0, from),\n      to: Math.min(to, view.state.doc.length),\n      insert,\n    });\n    const selection = EditorSelection.cursor(\n      changes.mapPos(Math.min(to, view.state.doc.length))\n    );\n    view.dispatch({\n      changes,\n      selection,\n    });\n  }, [view, props.wordReplacement, props.onWordSelected]);\n  return <EditorContainer ref={ref} />;\n}\n","import { EditorView } from '@codemirror/view';\nimport { Text } from '@codemirror/text';\nimport { SelectionRange } from '@codemirror/state';\n\nexport interface WordAtPosition {\n  from: number;\n  to: number;\n  word: string;\n}\n\nexport interface WordSelectionConfig {\n  onWordSelected: (word: WordAtPosition) => void;\n}\nexport const wordSelection = (config: WordSelectionConfig) => [\n  EditorView.updateListener.of((update) => {\n    if (update.selectionSet) {\n      config.onWordSelected(\n        findWordAt(update.state.doc, update.state.selection.asSingle().main)\n      );\n    }\n  }),\n];\n\nexport const findWordAt = (document: Text, position: SelectionRange) => {\n  const line = document.lineAt(position.head);\n  const isDelimiter = (c: string) => /[^\\w\\-']+/.exec(c);\n\n  let start;\n  let end;\n\n  if (position.empty) {\n    if (position.assoc === 1) {\n      start = position.from - line.from;\n      end = position.from + 1 - line.from;\n    } else {\n      start = position.from - 1 - line.from;\n      end = position.from - line.from;\n    }\n  } else {\n    start = position.from - line.from;\n    end = position.to - line.from;\n  }\n\n  while (start >= 0 && !isDelimiter(line.text[start])) {\n    start -= 1;\n  }\n  start = Math.max(0, start + 1);\n\n  while (end < line.length && !isDelimiter(line.text[end])) {\n    end += 1;\n  }\n  end = Math.max(start, end);\n\n  return {\n    from: start + line.from,\n    to: end + line.from,\n    word: line.text.substring(start, end),\n  };\n};\n","import { DependencyList, useEffect } from 'react';\n\nexport const useDocumentListener = <EventName extends keyof DocumentEventMap>(\n  event: EventName,\n  listener: (event: DocumentEventMap[EventName]) => void,\n  deps?: DependencyList\n) => {\n  useEffect(() => {\n    const nestedListener = (documentEvent: DocumentEventMap[EventName]) =>\n      listener(documentEvent);\n    document.addEventListener(event, nestedListener);\n    return () => document.removeEventListener(event, nestedListener);\n  }, [listener, event, ...(deps ?? [])]);\n};\n","import { useSnackbar } from 'notistack';\nimport React, { useEffect, useState } from 'react';\nimport { useBeforeunload as useBeforeUnload } from 'react-beforeunload';\nimport { CodeMirrorEditor } from '@lyricistant/codemirror/CodeMirror';\nimport { EditorView } from '@codemirror/view';\nimport { redo, undo, undoDepth } from '@codemirror/history';\nimport { EditorState, EditorStateConfig } from '@codemirror/state';\nimport { openSearchPanel } from '@codemirror/search';\nimport { logger, platformDelegate } from '@lyricistant/renderer/globals';\nimport { useDocumentListener } from '@lyricistant/renderer/util/useEventListener';\nimport { toDroppableFile } from './to-droppable-file';\nimport { useReplacedWords, useSelectedWordStore } from './SelectedWordStore';\nimport { useEditorTextStore } from './EditorTextStore';\n\nexport const Editor: React.FC = () => {\n  const [editor, setEditor] = useState<EditorView>(null);\n  const [defaultConfig, setDefaultConfig] = useState<EditorStateConfig>(null);\n  useDocumentListener(\n    'drop',\n    async (event) => {\n      if (!editor) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.dataTransfer?.files?.length > 0) {\n        logger.debug('Attempted to drop a file.');\n        const file = await toDroppableFile(event.dataTransfer.files.item(0));\n\n        if (undoDepth(editor.state) > 0) {\n          platformDelegate.send('prompt-save-file-for-open', file);\n          return;\n        }\n\n        platformDelegate.send('open-file-attempt', file);\n      }\n    },\n    [editor]\n  );\n  useDocumentListener(\n    'dragover',\n    (event) => {\n      event.preventDefault();\n      return true;\n    },\n    [editor]\n  );\n\n  useEffect(handleEditorEvents(editor, defaultConfig), [editor, defaultConfig]);\n  useBeforeUnload(() => {\n    if (editor && undoDepth(editor.state) !== 0) {\n      return \"Are you sure you want to leave? Your changes haven't been saved.\";\n    }\n  });\n  const store = useSelectedWordStore();\n  const { onEditorText } = useEditorTextStore();\n  return (\n    <CodeMirrorEditor\n      onEditorMounted={setEditor}\n      onWordSelected={store.onWordSelected}\n      wordReplacement={useReplacedWords()}\n      onDefaultConfigReady={setDefaultConfig}\n      onTextChanged={onEditorText}\n    />\n  );\n};\n\nfunction handleEditorEvents(\n  editor: EditorView,\n  defaultConfig: EditorStateConfig\n) {\n  const { enqueueSnackbar } = useSnackbar();\n  return () => {\n    if (!editor) {\n      return;\n    }\n\n    const onFileSaveEnded = (error: any, path: string) => {\n      // Resets the undo stack.\n      editor.setState(\n        EditorState.create({\n          ...defaultConfig,\n          doc: editor.state.doc,\n        })\n      );\n\n      if (path) {\n        enqueueSnackbar(`${path} saved`, { variant: 'success' });\n      }\n    };\n    platformDelegate.on('file-save-ended', onFileSaveEnded);\n\n    const onNewFileAttempt = () => {\n      if (undoDepth(editor.state) === 0) {\n        platformDelegate.send('okay-for-new-file');\n      } else {\n        platformDelegate.send('prompt-save-file-for-new');\n      }\n    };\n    platformDelegate.on('is-okay-for-new-file', onNewFileAttempt);\n\n    const onQuitAttempt = () => {\n      if (undoDepth(editor.state) === 0) {\n        platformDelegate.send('okay-for-quit');\n      } else {\n        platformDelegate.send('prompt-save-file-for-quit');\n      }\n    };\n    platformDelegate.on('is-okay-for-quit-file', onQuitAttempt);\n\n    const onNewFileCreated = () => {\n      editor.setState(EditorState.create(defaultConfig));\n    };\n    platformDelegate.on('new-file-created', onNewFileCreated);\n\n    const onFileOpened = (\n      error: Error,\n      fileName: string,\n      fileContents: string,\n      clearHistory: boolean\n    ) => {\n      if (!error) {\n        if (clearHistory) {\n          editor.setState(\n            EditorState.create({\n              ...defaultConfig,\n              doc: fileContents,\n            })\n          );\n        } else {\n          editor.dispatch({\n            changes: {\n              from: 0,\n              to: editor.state.doc.length,\n              insert: fileContents,\n            },\n          });\n        }\n      }\n    };\n    platformDelegate.on('file-opened', onFileOpened);\n\n    const onTextRequested = () => {\n      platformDelegate.send('editor-text', editor.state.doc.toString());\n    };\n    platformDelegate.on('request-editor-text', onTextRequested);\n\n    const onUndo = () => undo(editor);\n    platformDelegate.on('undo', onUndo);\n\n    const onRedo = () => redo(editor);\n    platformDelegate.on('redo', onRedo);\n\n    const onFind = () => openSearchPanel(editor);\n    platformDelegate.on('find', onFind);\n\n    const onReplace = () => openSearchPanel(editor);\n    platformDelegate.on('replace', onReplace);\n\n    return () => {\n      platformDelegate.removeListener('file-save-ended', onFileSaveEnded);\n      platformDelegate.removeListener('is-okay-for-new-file', onNewFileAttempt);\n      platformDelegate.removeListener('is-okay-for-quit-file', onQuitAttempt);\n      platformDelegate.removeListener('new-file-created', onNewFileCreated);\n      platformDelegate.removeListener('file-opened', onFileOpened);\n      platformDelegate.removeListener('request-editor-text', onTextRequested);\n      platformDelegate.removeListener('undo', onUndo);\n      platformDelegate.removeListener('redo', onRedo);\n      platformDelegate.removeListener('find', onFind);\n      platformDelegate.removeListener('replace', onReplace);\n    };\n  };\n}\n","import { DroppableFile } from '@lyricistant/common/files/Files';\n\nexport const toDroppableFile = async (\n  file: File & { path?: string }\n): Promise<DroppableFile> => ({\n  path: file.path ?? file.name,\n  type: file.type,\n  data: await file.arrayBuffer(),\n});\n","import { useTheme, useMediaQuery } from '@material-ui/core';\n\nexport const useSmallLayout = (): boolean => {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.down('sm'));\n};\n","import { UiConfig } from '@lyricistant/common/ui/UiConfig';\nimport { Box, ButtonBase, Paper, Theme } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  AddCircle,\n  FolderOpen,\n  GetApp,\n  Save,\n  Settings,\n} from '@material-ui/icons';\nimport React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useHistory } from 'react-router-dom';\nimport { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { downloadApp } from '@lyricistant/renderer/download';\nimport { platformDelegate } from '@lyricistant/renderer/globals';\nimport { useEditorText } from '@lyricistant/renderer/editor/EditorTextStore';\n\nconst useIconStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56,\n    color: theme.palette.action.active,\n    flexShrink: 0,\n    display: 'inline-flex',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n  },\n}));\n\nconst useMenuStyles = makeStyles<Theme, { isSmallLayout: boolean }>(\n  (theme: Theme) => ({\n    menu: {\n      backgroundColor: theme.palette.background.paper,\n      'padding-top': 'env(safe-area-inset-top)',\n      'padding-left': 'env(safe-area-inset-left)',\n      'padding-right': 'env(safe-area-inset-right)',\n      height: (props) => (props.isSmallLayout ? 'fit-content' : '100%'),\n      width: (props) => (props.isSmallLayout ? '100%' : 'fit-content'),\n    },\n  })\n);\n\nconst MenuIcon: FunctionComponent<{\n  onClick?: () => void;\n  ariaLabel: string;\n}> = ({ onClick, ariaLabel, children }) => {\n  const classes = useIconStyles();\n  const [debouncedClick] = useDebouncedCallback(onClick, 200);\n\n  return (\n    <ButtonBase\n      className={classes.root}\n      onClick={debouncedClick}\n      aria-label={ariaLabel}\n    >\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n        {React.Children.map(children, (child: React.ReactElement) =>\n          React.cloneElement(child, { className: classes.icon })\n        )}\n      </Box>\n    </ButtonBase>\n  );\n};\n\nexport const Menu: React.FC = () => {\n  const theme = useTheme();\n  const classes = useMenuStyles({ isSmallLayout: useSmallLayout() });\n  const useHorizontal = useMediaQuery(theme.breakpoints.down('sm'));\n  const [uiConfig, setUiConfig] = useState<UiConfig>(null);\n  const editorText = useEditorText();\n  const history = useHistory();\n  const isSmallLayout = useSmallLayout();\n\n  const onNewClicked = () => platformDelegate.send('new-file-attempt');\n  const onOpenClicked = () => platformDelegate.send('open-file-attempt');\n  const onSaveClicked = useCallback(\n    () => platformDelegate.send('save-file-attempt', editorText),\n    [editorText]\n  );\n\n  const onSettingsClicked = () => history.replace('/preferences');\n  const onDownloadClicked = () => {\n    if (!downloadApp()) {\n      history.replace('/download');\n    }\n  };\n  useEffect(() => {\n    const onConfigChange = (config: UiConfig) => {\n      setUiConfig(config);\n    };\n\n    platformDelegate.on('ui-config', onConfigChange);\n    platformDelegate.send('request-ui-config');\n\n    return () => {\n      platformDelegate.removeListener('ui-config', onConfigChange);\n    };\n  }, []);\n\n  return (\n    <Box\n      marginBottom={isSmallLayout ? '8px' : 'inherit'}\n      marginRight={isSmallLayout ? 'inherit' : '8px'}\n      boxShadow={1}\n    >\n      <Paper square className={classes.menu} color={theme.palette.primary.main}>\n        <Box\n          display={'flex'}\n          height={isSmallLayout ? 'auto' : '100%'}\n          width={isSmallLayout ? '100%' : 'auto'}\n          flexDirection={useHorizontal ? 'row' : 'column'}\n        >\n          <MenuIcon ariaLabel={'New'} onClick={onNewClicked}>\n            <AddCircle />\n          </MenuIcon>\n          {uiConfig?.showOpen && (\n            <MenuIcon ariaLabel={'Open'} onClick={onOpenClicked}>\n              <FolderOpen />\n            </MenuIcon>\n          )}\n          <MenuIcon ariaLabel={'Save'} onClick={onSaveClicked}>\n            <Save />\n          </MenuIcon>\n          <Box flexGrow={'1'} />\n          {uiConfig?.showDownload && (\n            <MenuIcon ariaLabel={'Download App'} onClick={onDownloadClicked}>\n              <GetApp />\n            </MenuIcon>\n          )}\n          <MenuIcon ariaLabel={'Open Preferences'} onClick={onSettingsClicked}>\n            <Settings />\n          </MenuIcon>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","export class Rhyme {\n  public word: string;\n  public score: number;\n\n  public constructor(word: string, score: number) {\n    this.word = word;\n    this.score = score;\n  }\n}\n","import { logger } from \"@lyricistant/renderer/globals\";\nimport { Rhyme } from './rhyme';\n\nconst url = 'https://lyricistant.wardellbagby.workers.dev';\ntype RhymeType = 'perfect' | 'near' | 'sounds-like';\n\nconst asyncRhymes = async (word: string, type: RhymeType): Promise<Rhyme[]> => {\n  let param;\n  switch (type) {\n    case 'perfect':\n      param = 'rel_rhy';\n      break;\n    case 'near':\n      param = 'rel_nry';\n      break;\n    case 'sounds-like':\n      param = 'sl';\n      break;\n  }\n\n  logger.debug(`Fetching ${type} rhymes for word: ${word}`);\n  const response = await fetch(`${url}/words?${param}=${word}&max=25`);\n\n  if (response.ok && response.status < 400) {\n    const text = await response.text();\n    logger.debug(`Response for ${type} and ${word}`, text);\n    try {\n      return JSON.parse(text);\n    } catch (e) {\n      logger.error(\"Couldn't parse rhymes response to JSON!\", word, text);\n      return [];\n    }\n  }\n  logger.error(\n    'Failed to fetch rhymes! Returning an empty list.',\n    word,\n    response\n  );\n  return [];\n};\n\nexport const fetchRhymes = async (word: string): Promise<Rhyme[]> => {\n  if (word.length === 0) {\n    return [];\n  }\n\n  return Promise.all([\n    asyncRhymes(word, 'perfect').then((rhymes) => increaseScore(rhymes, 10000)),\n    asyncRhymes(word, 'near').then((rhymes) => increaseScore(rhymes, 1000)),\n    asyncRhymes(word, 'sounds-like'),\n  ]).then((results) =>\n    [...new Set(flatten(results))].sort(\n      (left: Rhyme, right: Rhyme) => right.score - left.score\n    )\n  );\n};\n\nconst increaseScore = (rhymes: Rhyme[], amount: number) =>\n  rhymes.map((rhyme: Rhyme) => new Rhyme(rhyme.word, rhyme.score + amount));\n\nconst flatten: <T>(input: T[][]) => T[] = (array) =>\n  array.reduce((prev, current) => prev.concat(current));\n","import { wrap } from 'comlink';\n\n/*\n When running in Node (for Jest tests), this can't be import.meta.url since\n those tests compile to CommonJS so we use Webpack to replace this when we\n actually build for a browser. The default is because Jest doesn't offer a\n good way of also supplying this variable, so we need something to fallback\n onto. This should go away once we move to running tests as ES6.\n\n Yes, I hate it too.\n*/\nexport const rhymeGenerator = wrap<typeof import('./rhyme-generator')>(\n  new Worker(\n    new URL(\n      './rhyme-generator.ts',\n      process.env.IMPORT_META_URL || 'file:///fake/location'\n    ),\n    {\n      name: 'rhyme-generator',\n    }\n  )\n);\n","import { assign, createMachine, EventObject } from 'xstate';\nimport { Rhyme } from '@lyricistant/renderer/rhymes/rhyme';\nimport { fetchRhymes as datamuseRhymes } from '@lyricistant/renderer/rhymes/datamuse';\nimport { RhymeSource } from '@lyricistant/common/preferences/PreferencesData';\nimport { rhymeGenerator } from '@lyricistant/rhyme-generator';\n\ninterface RhymesContext {\n  rhymeSource?: RhymeSource;\n  input?: string;\n  rhymes: Rhyme[];\n  error?: any;\n}\n\ninterface RhymesEvent extends EventObject {\n  type: 'INPUT';\n  input: string;\n  rhymeSource: RhymeSource;\n}\n\nconst fetchRhymes = async (input: string, rhymeSource: RhymeSource) => {\n  let results: Rhyme[];\n  switch (rhymeSource) {\n    case RhymeSource.Offline:\n      results = await rhymeGenerator.generateRhymes(input);\n      break;\n    case RhymeSource.Datamuse:\n      results = await datamuseRhymes(input);\n      break;\n  }\n\n  return results.filter((rhyme) => rhyme && rhyme.word && rhyme.score);\n};\n\nexport const rhymesMachine = createMachine<RhymesContext, RhymesEvent>({\n  id: 'rhymes',\n  initial: 'inactive',\n  context: {\n    rhymes: [],\n  },\n  on: {\n    INPUT: [\n      {\n        target: '.loading',\n        cond: (context, event) =>\n          context.input !== event.input ||\n          context.rhymeSource !== event.rhymeSource,\n        actions: assign({\n          input: (context, event) => event.input,\n          rhymeSource: (context, event) => event.rhymeSource,\n        }),\n      },\n    ],\n  },\n  states: {\n    inactive: {},\n    loading: {\n      initial: 'debouncing',\n      states: {\n        debouncing: {\n          after: {\n            400: 'active',\n          },\n        },\n        active: {\n          invoke: {\n            id: 'fetch-rhymes',\n            src: async (context) =>\n              fetchRhymes(context.input, context.rhymeSource),\n            onDone: [\n              {\n                target: '#displaying',\n                cond: (context, event) =>\n                  Array.isArray(event.data) && event.data.length > 0,\n                actions: assign({\n                  rhymes: (context, event) => event.data,\n                }),\n              },\n              {\n                target: '#no-results',\n                actions: assign({\n                  rhymes: (context, event) => event.data,\n                }),\n              },\n            ],\n            onError: {\n              target: '#error',\n              actions: assign({\n                error: (context, event) => event.data,\n              }),\n            },\n          },\n        },\n      },\n    },\n    displaying: {\n      id: 'displaying',\n    },\n    'no-results': {\n      id: 'no-results',\n    },\n    error: {\n      id: 'error',\n    },\n  },\n});\n","import Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport React, { useEffect, useLayoutEffect, useMemo } from 'react';\nimport { useErrorHandler } from 'react-error-boundary';\nimport { Components, VirtuosoGrid } from 'react-virtuoso';\nimport { usePreferences } from '@lyricistant/renderer/preferences/PreferencesStore';\nimport { isDevelopment } from '@lyricistant/common/BuildModes';\nimport { useMachine } from '@xstate/react';\nimport { rhymesMachine } from '@lyricistant/renderer/rhymes/RhymesMachine';\nimport { LinearProgress, Typography } from '@material-ui/core';\nimport {\n  useSelectedWordPosition,\n  useSelectedWords,\n  useSelectedWordStore,\n} from '@lyricistant/renderer/editor/SelectedWordStore';\nimport { Rhyme } from './rhyme';\n\nconst useRhymeListStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.text.disabled,\n    '&:hover': {\n      color: theme.palette.text.primary,\n    },\n  },\n  rhyme: {\n    'text-align': 'center',\n    '&:hover': {\n      background: theme.palette.background.paper,\n    },\n  },\n  itemContainer: {\n    display: 'flex',\n    flex: 'none',\n    'align-content': 'stretch',\n    [theme.breakpoints.up('xs')]: {\n      width: '50%',\n      height: '50px',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '100%',\n      height: '80px',\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '50%',\n    },\n  },\n  listContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    height: '100%',\n    width: '100%',\n  },\n}));\n\ninterface RhymesListProps {\n  rhymes: Rhyme[];\n  onRhymeClicked: (rhyme: Rhyme) => void;\n}\n\nconst RhymesList = ({ rhymes, onRhymeClicked }: RhymesListProps) => {\n  const classes = useRhymeListStyles();\n\n  const Item: Components['Item'] = useMemo(\n    () => (props) => <div {...props} className={classes.itemContainer} />,\n    [classes.itemContainer]\n  );\n  const List: Components['List'] = useMemo(\n    () =>\n      React.forwardRef((props, ref) => (\n        <div {...props} className={classes.listContainer} ref={ref} />\n      )),\n    [classes.listContainer]\n  );\n\n  return (\n    <VirtuosoGrid\n      components={{ Item, List }}\n      style={{ width: '100%', height: '100%' }}\n      overscan={20}\n      totalCount={rhymes.length}\n      listClassName={classes.root}\n      itemContent={(index) => {\n        const rhyme = rhymes[index];\n\n        if (!rhyme) {\n          return;\n        }\n\n        return renderRhyme(rhyme, classes.rhyme, () => {\n          onRhymeClicked(rhyme);\n        });\n      }}\n    />\n  );\n};\n\nconst useLoadingIndicatorStyles = makeStyles<Theme, { display: boolean }>(\n  (theme: Theme) => ({\n    root: {\n      visibility: ({ display }) => (display ? 'visible' : 'hidden'),\n    },\n    progressBarColor: {\n      backgroundColor: theme.palette.text.secondary,\n    },\n    progressBarBackground: {\n      backgroundColor: theme.palette.background.default,\n    },\n  })\n);\nconst LoadingIndicator = (props: { display: boolean }) => {\n  const classes = useLoadingIndicatorStyles(props);\n  return (\n    <LinearProgress\n      className={classes.root}\n      classes={{\n        colorPrimary: classes.progressBarBackground,\n        barColorPrimary: classes.progressBarColor,\n      }}\n    />\n  );\n};\n\nconst useInactiveHelperTextStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.text.disabled,\n  },\n}));\nconst HelperText = ({ text }: { text: string }) => {\n  const classes = useInactiveHelperTextStyles();\n\n  return (\n    <Box\n      height={'100%'}\n      width={'100%'}\n      overflow={'hidden'}\n      textOverflow={'ellipsis'}\n      p={'16px'}\n      display={'flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n    >\n      <Typography className={classes.root} variant={'body1'}>\n        {text}\n      </Typography>\n    </Box>\n  );\n};\n\nexport const Rhymes: React.FC = () => {\n  const [state, send] = useMachine(rhymesMachine);\n\n  const selectedWordStore = useSelectedWordStore();\n  const handleError = useErrorHandler();\n  const selectedWord = useSelectedWords();\n  const selectedWordPosition = useSelectedWordPosition();\n\n  const preferences = usePreferences();\n\n  useLayoutEffect(() => {\n    if (!selectedWord || !preferences) {\n      return;\n    }\n    send({\n      type: 'INPUT',\n      input: selectedWord,\n      rhymeSource: preferences.rhymeSource,\n    });\n  }, [selectedWord, preferences]);\n\n  useEffect(() => {\n    if (state.matches('error')) {\n      handleError(state.context.error);\n    }\n  }, [handleError, state]);\n\n  const rhymes: Rhyme[] = state.context.rhymes;\n\n  return (\n    <Box display={'flex'} flexDirection={'column'}>\n      <LoadingIndicator display={state.matches('loading')} />\n\n      {state.matches('inactive') && (\n        <HelperText text={'Waiting for lyrics...'} />\n      )}\n\n      {state.matches('no-results') && <HelperText text={'No rhymes found'} />}\n\n      {rhymes.length > 0 && (\n        <RhymesList\n          rhymes={rhymes}\n          onRhymeClicked={(rhyme) =>\n            selectedWordStore.onWordReplaced({\n              originalWord: {\n                word: selectedWord,\n                from: selectedWordPosition[0],\n                to: selectedWordPosition[1],\n              },\n              newWord: rhyme.word,\n            })\n          }\n        />\n      )}\n    </Box>\n  );\n};\n\nfunction renderRhyme(\n  rhyme: Rhyme,\n  className: string,\n  onClick: () => void\n): React.ReactElement {\n  return (\n    <Box flex={1} width={'100%'} height={'100%'} onClick={onClick}>\n      <ListItem\n        className={className}\n        button\n        key={rhyme.word ?? ''}\n        style={{ height: '100%' }}\n      >\n        <ListItemText\n          primary={rhyme.word ?? ''}\n          primaryTypographyProps={{ align: 'center' }}\n          secondary={isDevelopment && rhyme.score}\n        />\n      </ListItem>\n    </Box>\n  );\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\nexport const isUiTest = process.env.UI_TESTING === 'ui-testing';\n","import { Box, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { ReactNode, useEffect } from 'react';\nimport { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { logger } from \"@lyricistant/renderer/globals\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  divider: {\n    background: theme.palette.background.paper,\n  },\n}));\n\ninterface AppLayoutProps {\n  main: ReactNode;\n  detail: ReactNode;\n  menu: ReactNode;\n}\n\nexport const AppLayout = ({ main, detail, menu }: AppLayoutProps) => {\n  const classes = useStyles();\n  const isSmallLayout = useSmallLayout();\n  let displayableChildren: ReactNode[];\n  if (isSmallLayout) {\n    displayableChildren = [\n      <React.Fragment key={'menu'}>{menu}</React.Fragment>,\n      <div key={'menu-main-divider'} />,\n      <React.Fragment key={'main'}>{main}</React.Fragment>,\n      <div key={'main-detail-divider'} className={classes.divider} />,\n      <React.Fragment key={'detail'}>{detail}</React.Fragment>,\n    ];\n  } else {\n    displayableChildren = [\n      <React.Fragment key={'menu'}>{menu}</React.Fragment>,\n      <React.Fragment key={'main'}>{main}</React.Fragment>,\n      <React.Fragment key={'detail'}>{detail}</React.Fragment>,\n    ];\n  }\n\n  useEffect(\n    () => logger.info(`Switching layout. isSmallLayout: ${isSmallLayout}`),\n    [isSmallLayout]\n  );\n  return (\n    <Box\n      height={'100%'}\n      width={'100%'}\n      display={'grid'}\n      m={0}\n      p={0}\n      overflow={'hidden'}\n      gridTemplateRows={createGridTemplateRows(isSmallLayout)}\n      gridTemplateColumns={createGridTemplateColumns(isSmallLayout)}\n    >\n      {displayableChildren}\n    </Box>\n  );\n};\n\nconst createGridTemplateRows = (isSmallLayout: boolean) => {\n  if (isSmallLayout) {\n    return `auto 8px minmax(200px, 1fr) 4px minmax(20%, 40%)`;\n  } else {\n    return `100%`;\n  }\n};\n\nconst createGridTemplateColumns = (isSmallLayout: boolean) => {\n  if (isSmallLayout) {\n    return `100%`;\n  } else {\n    return `auto minmax(200px, 1fr) minmax(25%, auto)`;\n  }\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { SelectedWordStore } from \"@lyricistant/renderer/editor/SelectedWordStore\";\nimport { EditorTextStore } from \"@lyricistant/renderer/editor/EditorTextStore\";\nimport { useChannel } from \"@lyricistant/renderer/platform/useChannel\";\nimport { PreferencesStore } from \"@lyricistant/renderer/preferences/PreferencesStore\";\nimport { Editor } from \"@lyricistant/renderer/editor/Editor\";\nimport { Menu } from \"@lyricistant/renderer/menu/Menu\";\nimport { Rhymes } from \"@lyricistant/renderer/rhymes/Rhymes\";\nimport { AppLayout } from './AppLayout';\n\nexport function App() {\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useChannel('file-opened', (error, filename) => {\n    if (error) {\n      enqueueSnackbar(`Couldn't open ${filename ?? 'selected file.'}`, {\n        variant: 'error',\n      });\n    }\n  });\n  useChannel('app-title-changed', (title) => (document.title = title));\n  useChannel('close-prefs', () => history.replace('/'));\n  useChannel('open-about', () => history.replace('/about'));\n\n  return (\n    <EditorTextStore>\n      <PreferencesStore>\n        <SelectedWordStore>\n          <AppLayout menu={<Menu />} main={<Editor />} detail={<Rhymes />} />\n        </SelectedWordStore>\n      </PreferencesStore>\n    </EditorTextStore>\n  );\n}\n","import React, { useState } from 'react';\nimport { PropsWithChildren } from 'react';\nimport { isIE, isMobile } from 'react-device-detect';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\n\nconst isUnsupportedBrowser = isMobile || isIE;\n\nconst getTipMessage = () => {\n  if (isMobile) {\n    return 'Try switching to a desktop browser.';\n  }\n  if (isIE) {\n    return 'Try switching to a more modern browser.';\n  }\n};\n\nconst WarningDialog = ({\n  onContinue,\n  open,\n}: {\n  onContinue: () => void;\n  open: boolean;\n}) => (\n  <Dialog open={open}>\n    <DialogTitle>Unsupported Browser</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Lyricistant doesn't currently support your browser. You might experience\n        some bugs or performance issues. {getTipMessage()}\n      </DialogContentText>\n    </DialogContent>\n\n    <DialogActions>\n      <Button key=\"no\" onClick={() => window.history.back()} color=\"primary\">\n        Go Back\n      </Button>\n      <Button key=\"yes\" onClick={onContinue} color=\"primary\">\n        Continue\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\nexport function DesktopOnly({\n  children,\n}: PropsWithChildren<Record<never, never>>) {\n  const [isAcknowledged, setAcknowledged] = useState(false);\n  const showWarning = isUnsupportedBrowser && !isAcknowledged;\n  return (\n    <>\n      <WarningDialog\n        open={showWarning}\n        onContinue={() => setAcknowledged(true)}\n      />\n      {children}\n    </>\n  );\n}\n","import { isDevelopment } from '@lyricistant/common/BuildModes';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TextareaAutosize,\n  Typography,\n} from '@material-ui/core';\nimport React, { useCallback, useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { logger } from \"@lyricistant/renderer/globals\";\nimport { useEditorText } from \"@lyricistant/renderer/editor/EditorTextStore\";\n\ninterface AppErrorProps {\n  error: Error;\n}\nexport function AppError({ error }: AppErrorProps) {\n  const onClose = useCallback(() => window.location.reload(), []);\n  const onCopy = useCallback(\n    () => window.navigator.clipboard.writeText(editorText),\n    []\n  );\n  const editorText = useEditorText();\n  useEffect(() => {\n    logger.error('Error in renderer', error);\n  }, [error]);\n  return (\n    <Dialog onClose={onClose} open>\n      <DialogTitle>Application Error</DialogTitle>\n      <Box paddingLeft={'32px'} paddingRight={'32px'} paddingBottom={'24px'}>\n        <Typography paragraph>\n          Sorry, an error has occurred in Lyricistant. Please reload the page to\n          continue. You can copy your current lyrics to the clipboard.\n        </Typography>\n        <Link\n          href={'https://github.com/wardellbagby/lyricistant/issues/new'}\n          rel=\"noopener\"\n          variant={'body1'}\n        >\n          Click here to report an issue.\n        </Link>\n        {isDevelopment && (\n          <Box\n            fontFamily={'Roboto Mono'}\n            width={'100%'}\n            minWidth={'100%'}\n            maxWidth={'100%'}\n          >\n            <TextareaAutosize\n              wrap={'soft'}\n              rowsMax={6}\n              readOnly\n              defaultValue={error.stack}\n            />\n          </Box>\n        )}\n      </Box>\n      <DialogActions>\n        <Button variant={'contained'} onClick={onCopy}>\n          Copy\n        </Button>\n        <Button variant={'contained'} onClick={onClose}>\n          Reload\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { onPageLoaded, onThemeUpdated } from '@lyricistant/renderer/preload';\nimport { setupAnalytics } from '@lyricistant/renderer/analytics/setupAnalytics';\nimport { AppRouter } from '@lyricistant/renderer/app/AppRouter';\nimport { DesktopOnly } from '@lyricistant/renderer/app/DesktopOnly';\nimport { PlatformEventsReadyHandler } from '@lyricistant/renderer/app/PlatformEventsReadyHandler';\nimport { Themed } from '@lyricistant/renderer/theme/Themed';\nimport { logger } from '@lyricistant/renderer/globals';\nimport { AppError } from '@lyricistant/renderer/app/AppError';\n\nwindow.onerror = (message, url, line, col, error) => {\n  if (!logger) {\n    // eslint-disable-next-line no-console\n    console.error(message, url, line, col, error);\n  }\n  logger.error(\n    JSON.stringify(message) + '\\n',\n    `Url: ${url}\\n`,\n    `Line: ${line}\\n`,\n    `Column: ${col}\\n`,\n    error\n  );\n};\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nsetupAnalytics();\nconst container: HTMLElement = document.getElementById('app');\n\nReactDOM.render(\n  <PlatformEventsReadyHandler>\n    <Themed\n      onThemeChanged={(background: string, foreground: string) => {\n        document.body.style.backgroundColor = background;\n        document.body.style.color = foreground;\n        onThemeUpdated(background);\n      }}\n    >\n      <SnackbarProvider\n        maxSnack={3}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      >\n        <HashRouter hashType={'noslash'}>\n          <ErrorBoundary\n            fallbackRender={({ error }) => <AppError error={error} />}\n          >\n            <DesktopOnly>\n              <AppRouter />\n            </DesktopOnly>\n          </ErrorBoundary>\n        </HashRouter>\n      </SnackbarProvider>\n    </Themed>\n  </PlatformEventsReadyHandler>,\n  container,\n  () => {\n    onPageLoaded();\n    container.style.opacity = '100%';\n  }\n);\n","export const setupAnalytics = () => {\n  if (process.env.NODE_ENV === 'production') {\n    window.goatcounter = {\n      path: (path) => {\n        if (location.protocol === 'file:') {\n          return 'electron';\n        }\n        return location.host + path;\n      },\n      allow_local: true,\n    };\n    const analyticsScript = document.createElement('script');\n    analyticsScript.setAttribute('src', 'https://gc.zgo.at/count.js');\n    analyticsScript.setAttribute('async', 'true');\n    analyticsScript.setAttribute(\n      'data-goatcounter',\n      'https://lyricistant.goatcounter.com/count'\n    );\n  }\n};\n","import React, { ReactNode, useEffect } from 'react';\nimport { platformDelegate } from \"@lyricistant/renderer/globals\";\n\n/**\n * Handles telling the platform when the renderer is ready to receive events.\n *\n * Due to how React's useEffect works, this MUST be the top-most component in\n * the tree so that the app properly alerts the platform that it is ready to\n * receive events after every other other component has registered its own\n * platform listeners.\n */\nexport const PlatformEventsReadyHandler = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  useEffect(() => platformDelegate.send('ready-for-events'), []);\n  return <>{children}</>;\n};\n","import { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React, {\n  FunctionComponent,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\nimport '@fontsource/roboto/latin-300.css';\nimport '@fontsource/roboto/latin-400.css';\nimport '@fontsource/roboto/latin-500.css';\nimport '@fontsource/roboto/latin-700.css';\nimport { createTheme } from '@lyricistant/renderer/theme';\nimport { useChannel } from '@lyricistant/renderer/platform/useChannel';\n\nexport const Themed: FunctionComponent<\n  PropsWithChildren<{\n    onThemeChanged: (background: string, foreground: string) => void;\n  }>\n> = ({ onThemeChanged, children }) => {\n  const [theme, setTheme] = useState(createTheme(null, true));\n  useEffect(\n    () =>\n      onThemeChanged(\n        theme.palette.background.default,\n        theme.palette.getContrastText(theme.palette.background.default)\n      ),\n    [theme, onThemeChanged]\n  );\n\n  useChannel(\n    'dark-mode-toggled',\n    (textSize, useDarkMode) => {\n      const appTheme = createTheme(textSize, useDarkMode);\n      setTheme(appTheme);\n    },\n    [setTheme]\n  );\n\n  return (\n    <CssBaseline>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CssBaseline>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { logger } from \"@lyricistant/renderer/globals\";\nimport { ChooseDownloadDialog } from \"@lyricistant/renderer/download/ChooseDownloadDialog\";\nimport { PlatformDialog } from \"@lyricistant/renderer/dialog/PlatformDialogs\";\nimport { Preferences } from \"@lyricistant/renderer/preferences/Preferences\";\nimport { AboutDialog } from \"@lyricistant/renderer/about/AboutDialog\";\nimport { App } from './App';\n\nexport function AppRouter() {\n  const location = useLocation();\n\n  useEffect(() => {\n    logger.verbose('Navigation', location.pathname);\n  }, [location]);\n\n  return (\n    <>\n      <App />\n      <Switch>\n        <Route path=\"/download\" component={ChooseDownloadDialog} />\n        <Route path=\"/preferences\" component={Preferences} />\n        <Route path=\"/about\" component={AboutDialog} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n\n      <PlatformDialog />\n    </>\n  );\n}\n","import { getThemePalette } from '@lyricistant/renderer/theme';\nimport jss, { Styles } from 'jss';\nimport camelCase from 'jss-plugin-camel-case';\n\njss.use(camelCase());\n\nconst theme = getThemePalette(true);\nconst dotStyles: Styles = {\n  dot: {\n    display: 'inline-block',\n    backgroundColor: theme.primary,\n    width: '30px',\n    height: '30px',\n    margin: '10px',\n    borderRadius: '100%',\n    animation: `$animation 1.2s 0s infinite linear`,\n    animationFillMode: 'both',\n  },\n  dotOffset: {\n    display: 'inline-block',\n    backgroundColor: theme.primary,\n    width: '30px',\n    height: '30px',\n    margin: '10px',\n    borderRadius: '100%',\n    animation: `$animation 1.2s .60s infinite linear`,\n    animationFillMode: 'both',\n  },\n  '@keyframes animation': {\n    '50%': {\n      transform: 'scale(.75); opacity: .2',\n    },\n    '100%': {\n      transform: 'scale(1); opacity: 1',\n    },\n  },\n};\n\nconst rootStyles: Styles = {\n  overlay: {\n    opacity: 1,\n    backgroundColor: theme.background,\n    color: theme.primaryText,\n    transition: 'opacity 500ms linear, background-color 500ms;',\n    height: '100%',\n    width: '100%',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    position: 'fixed',\n    overscrollBehavior: 'none',\n    zIndex: '999',\n  },\n};\n\nconst {\n  classes: { dot, dotOffset },\n} = jss.createStyleSheet(dotStyles).attach();\nconst {\n  classes: { overlay },\n} = jss.createStyleSheet(rootStyles).attach();\n\nlet container = document.getElementById('preload-overlay');\n\nif (!container) {\n  container = document.createElement('div');\n  container.className = overlay;\n  container.id = 'preload-overlay';\n  document.body.append(container);\n\n  [0, 0, 0].forEach((_, index) => {\n    const dotElement = document.createElement('div');\n    dotElement.className = index % 2 ? dot : dotOffset;\n    container.append(dotElement);\n  });\n}\n\nexport const onPageLoaded = () => {\n  container.style.opacity = '0';\n  setTimeout(() => {\n    container.remove();\n    container = null;\n  }, 500);\n};\n\nexport const onThemeUpdated = (background: string) => {\n  if (container) {\n    container.style.backgroundColor = background;\n  }\n};\n","import { createMuiTheme, responsiveFontSizes, Theme } from '@material-ui/core';\n\nexport const getThemePalette = (useDarkTheme: boolean) =>\n  useDarkTheme ? darkThemePalette : lightThemePalette;\nexport const createTheme = (\n  textSize: number | null,\n  useDarkTheme: boolean\n): Theme => {\n  const themePalette = getThemePalette(useDarkTheme);\n\n  return responsiveFontSizes(\n    createMuiTheme({\n      palette: {\n        type: useDarkTheme ? 'dark' : 'light',\n        action: {\n          hover: themePalette.primary,\n          hoverOpacity: 0,\n        },\n        primary: {\n          main: themePalette.primary,\n        },\n        background: {\n          default: themePalette.background,\n          paper: themePalette.surface,\n        },\n        text: {\n          primary: themePalette.primaryText,\n          secondary: themePalette.secondaryText,\n        },\n      },\n      typography: textSize\n        ? {\n            fontSize: textSize,\n          }\n        : undefined,\n    })\n  );\n};\n\nconst lightThemePalette = {\n  primary: '#00796b',\n  background: '#fafafa',\n  surface: '#E0E0E0',\n  primaryText: '#212121',\n  secondaryText: '#424242',\n};\n\nconst darkThemePalette = {\n  primary: '#4db6ac',\n  background: '#141414',\n  surface: '#232323',\n  primaryText: '#f8f8f8',\n  secondaryText: '#bdbdbd',\n};\n"],"sourceRoot":""}